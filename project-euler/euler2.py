# Euler problem 2
##########################
# Each new term in the fibonacciNumbersonacci sequence is generated by adding the previous two terms.
# By considering the terms in the fibonacciNumbersonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

import time
start = time.time()

numbers = list(range(1,1000))
fibonacciNumbers = [1 , 2]

from remove_odd import remove_odd

while fibonacciNumbers[-1] < 4000000:
    input = fibonacciNumbers[-1] + fibonacciNumbers[-2]
    fibonacciNumbers.append(input)

EvenValuedfibonacciTerms = remove_odd(fibonacciNumbers)

sumOfEvenValuedfibonacciTerms = sum(EvenValuedfibonacciTerms)

print(sumOfEvenValuedfibonacciTerms)
print("This took " + str(time.time() - start) + " seconds")
